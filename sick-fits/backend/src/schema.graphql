# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}

# need to redefine User type so that passwords and password resets can't be hacked from the frontend.
# so add the same User type but remove all the properties related to passwords
# the Permission type is brought in via the import at the top
type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
}

type Mutation {
  createItem(title: String, description: String, price: Int, image: String, largeImage: String): Item!
  updateItem(id: ID!, title: String, description: String, price: Int): Item!
  deleteItem(id: ID!): Item
  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User!
  # return just a SuccessMessage type that isn't part of the db
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
}

type Query {
  # items just like this returns all items
  # items: [Item]!
  # items like this allows for pagination.
  items (where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, first: Int): [Item]!
  # ItemWhereUniqueInput can be found in prisma.graphql
  item(where: ItemWhereUniqueInput!): Item
  itemsConnection(where: ItemWhereInput): ItemConnection!
  # the current user
  me: User
  users: [User]!
}